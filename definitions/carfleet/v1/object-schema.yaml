components:
  schemas:
    Car:
      required:
        - publicId
        - brand
        - model
        - engineType
        - manufacturingDate
        - color
      type: object
      properties:
        publicId:
          type: string
          format: uuid
          description: a UUID acts as public id to identify a Car. Use this id for fetching and updating
        brand:
          type: string
          minLength: 2
          maxLength: 100
          description: The Car brand
          example: BMW
        model:
          type: string
          minLength: 2
          maxLength: 100
          description: The Car Model
          example: X5
        engineType:
          type: string
          enum:
            - ELECTRIC
            - FUEL
            - HYBRID
        fuelType:
          type: string
          enum:
            - DISEL
            - PETROL
          description: The fuel type (Diesel, Petrol)
        description:
          type: string
          maxLength: 500
          description: A description field for more information about the Car
          example: A nice powerful car have alot of options
        manufacturingDate:
          type: string
          format: date
          description: The manufactring date of the car
        color:
          type: string
        mileage:
          type: integer
          format: int16
          minimum: 0
          maximum: 1000000
          description: The miliage of Car
        status:
          type: string
          enum:
            - READY
            - UNDER_REPAIR
            - BROKEN

    CarReservation:
      required:
        - publicId
        - carId
        - driver
      properties:
        publicId:
          type: string
          format: uuid
          description: a UUID acts as public id to identify a CarReservation. Use this id for fetching and updating
        carId:
          type: string
          format: uuid
          description: The public id of the reserved car
        reservedFrom:
          type: string
          format: date-time
          description: The reservation Date and Time in ISO 8601 format
        reservedTo:
          type: string
          format: date-time
          description: The reservation end Date and Time in ISO 8601 format
        driver:
          $ref: "#/components/schemas/Driver"
        status:
          $ref: "#/components/schemas/CarReservationStatusEnum"
        eventMock:
          description: This mock is only to generate CarReservationEventEnum
          $ref: "#/components/schemas/CarReservationEventEnum"

    CarReservationStatusEnum:
      type: string
      enum:
        - NEW
        - CONFIRMED
        - ALLOCATED
        - REJECTED
        - CANCELLED
        - STARTED
        - FINISHED
        - WAITING_FOR_PAY
        - PAYED
        - PAY_EXCEPTION

    CarReservationEventEnum:
      type: string
      enum:
        - REJECT_RESERVATION
        - CONFIRM_RESERVATION
        - ALLOCATE_RESERVATION
        - START_RESERVATION
        - FINISH_RESERVATION
        - CREATE_INVOICE
        - PAY_INVOICE
        - CANCEL_RESERVATION

    Driver:
      required:
        - pubilicId
      properties:
        publicId:
          type: string
          format: uuid
          description: a UUID acts as public id to identify a Driver. Use this id for fetching and updating
        data:
          $ref: 'https://raw.githubusercontent.com/mambarek/api-commons-definitions/master/apis/commons/v1/master-data-schema.yaml#/components/schemas/PersonData'

    CarTableItem:
      type: object
      description: Search list item to be shown in a llist view
      properties:
        publicId:
          type: string
          format: uuid
        brand:
          type: string
        model:
          type: string
        description:
          type: string
        manufacturingDate:
          type: string
          format: date
        color:
          type: string
        mileage:
          type: integer
          format: int16
        status:
          type: string

    CarSearchResult:
      type: object
      properties:
        total:
          type: integer
          format: int16
          description: The total count of items that fullfill the search query
        page:
          type: integer
          format: int16
          description: The current selected page in UI
        records:
          type: integer
          format: int64
          description: Count of returned items that fulfill the pagonation criteria
        rows:
          type: array
          items:
            $ref: '#/components/schemas/CarTableItem'
          description: Car items returned
        userdata:
          type: object
          description: Not in use may be removed
